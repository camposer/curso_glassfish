Cómo configurar mod_jk con glassfish (sin balanceo)
===================================================

1.- Instalar Apache HTTP Server y compilador de C
# yum install httpd.x86_64 httpd-devel.x86_64 gcc.x86_64

NOTA:
	- Podría buscar un RPM pre-construido que se adapte a su arquitectura, por ejemplo:
	http://rpm.pbone.net/index.php3/stat/4/idpl/21762006/dir/redhat_el_6/com/apache2-mod_jk-1.2.37-4.1.x86_64.rpm.html

2.- Descargar mod_jk (Linux, Unix, MacOS)
	- http://apache.rediris.es/tomcat/tomcat-connectors/jk/tomcat-connectors-1.2.40-src.tar.gz
	
3.- Configurar y compilar
	HOME_MOD-JK-SRC$ cd native && ./configure --with-apxs=/usr/bin/apxs
	HOME_MOD-JK-SRC$ make
	HOME_MOD-JK-SRC$ sudo cp ./apache-2.0/mod_jk.so /etc/httpd/modules/

4.- Crear el fichero de configuración (/etc/httpd/conf.d/mod-jk.conf) para apache:
# Load mod_jk module
# Specify the filename of the mod_jk lib
LoadModule jk_module modules/mod_jk.so

# Where to find workers.properties
JkWorkersFile conf/workers.properties

# Where to put jk logs
JkLogFile logs/mod_jk.log

# Set the jk log level [debug/error/info]
JkLogLevel info

# Select the log format
JkLogStampFormat  "[%a %b %d %H:%M:%S %Y]"

# JkOptions indicates to send SSK KEY SIZE
JkOptions +ForwardKeySize +ForwardURICompat -ForwardDirectories

# JkRequestLogFormat
JkRequestLogFormat "%w %V %T"

# Mount your applications
# The default setting only sends Java application data to mod_jk.
# Use the commented-out line to send all URLs through mod_jk.
#JkMount /clusterjsp/* loadbalancer
JkMount /clusterjsp/* worker1

# Add shared memory.
# This directive is present with 1.2.10 and
# later versions of mod_jk, and is needed for
# for load balancing to work properly
JkShmFile logs/jk.shm

# Add jkstatus for managing runtime data
<Location /jkstatus/>
JkMount status
Order deny,allow
Deny from all
Allow from 127.0.0.1
</Location>

4.- Agregar configuraciones de workers (/etc/httpd/conf/workers.properties)
# Define 1 real worker using ajp13
worker.list=worker1
# Set properties for worker1 (ajp13)
worker.worker1.type=ajp13
worker.worker1.host=localhost
worker.worker1.port=8009

5.- Reiniciar Apache
	# service httpd restart

6.- Crear el conector AJP en el glassfish. Como usuario glassfish ejecutar:
	$ bin/asadmin -W pass create-network-listener --protocol http-listener-1 \
	--listenerport 8009 --jkenabled true jk-connector

7.- Desplegar una aplicación (Ej. clusterjsp) dentro del server (no cluster!!!)

8.- Probar, ejecutar:
	http://IP_SERVIDOR:8080/clusterjsp/ (GLASSFISH!!!)
	http://IP_SERVIDOR/clusterjsp/ (mod_jk)